# External Kafka Configuration for ER Kafka REST Service
# This file will be loaded from the relative path: etc/kafka-rest/er-kafka-rest.properties
# relative to the location of the JAR file

# Kafka Bootstrap Servers
kafka.bootstrap.servers=localhost:9092,localhost:9094,localhost:9096

# Rack-aware Configuration 
# Set this to the rack/zone where this service is deployed
kafka.client.rack=zone-c

# Additional Kafka Client Settings (optimized for performance)
kafka.client.id=er-kafka-rest-service
kafka.connections.max.idle.ms=600000        # 10 minutes
kafka.metadata.max.age.ms=60000             # 1 minute (was 5 minutes) - faster partition discovery
kafka.request.timeout.ms=10000              # 10s (was 30s) - faster timeout for unknown partitions
kafka.session.timeout.ms=10000
kafka.heartbeat.interval.ms=3000
kafka.fetch.min.bytes=1024                  # 1KB minimum before returning
kafka.fetch.max.wait.ms=100                 # 100ms (was 250ms) - faster response
kafka.max.partition.fetch.bytes=5242880      # 5MB per partition
# Performance and Retry Optimization
kafka.enable.auto.commit=false              # Manual control for better performance
kafka.retry.backoff.ms=100                  # Quick retry for transient issues
kafka.reconnect.backoff.ms=50               # Fast reconnection for rack failures  
kafka.reconnect.backoff.max.ms=1000         # Cap at 1 second max
kafka.max.poll.records=1000                 # Process up to 1000 records per poll
kafka.max.poll.interval.ms=30000            # 30s max poll interval
kafka.receive.buffer.bytes=131072           # 128KB receive buffer (2x default)
kafka.send.buffer.bytes=131072              # 128KB send buffer (2x default)

# Memory and Thread Optimization  
kafka.max.request.size=2097152              # 2MB max request (for large batches)
kafka.buffer.memory=67108864                # 64MB buffer memory (2x default)
kafka.batch.size=32768                      # 32KB batch size (2x default)
kafka.linger.ms=5                           # Small linger for responsiveness
kafka.compression.type=snappy               # Snappy compression for speed

# Topic and Partition Discovery Optimization
kafka.allow.auto.create.topics=false        # Don't auto-create topics
kafka.check.crcs=true                       # Enable CRC checking
kafka.exclude.internal.topics=true          # Skip internal topics
kafka.isolation.level=read_committed        # Consistent reads only
kafka.receive.buffer.bytes=524288            # 512KB
kafka.send.buffer.bytes=524288               # 512KB

# Service-specific settings
service.name=ER Kafka REST Service
service.version=1.0.0
service.environment=production

# Threading for concurrency (async controller + executor)
spring.task.execution.pool.core-size=10
spring.task.execution.pool.max-size=50
spring.task.execution.pool.queue-capacity=200
spring.task.execution.thread-name-prefix=async-

# Tomcat thread pool
server.tomcat.threads.max=200


